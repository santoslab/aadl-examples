--iPCA_Security


package iPCA_Security
public
  with 
  iPCA_Feature_Groups,
  Security;

system Security_System_iPCA extends Security::Security_System
  features 
    crypto_control : refined to feature group iPCA_Feature_Groups::Crypto_Control_iPCA;
	properties
		Classifier_Substitution_Rule => Type_Extension;
end Security_System_iPCA;

 system implementation Security_System_iPCA.i extends Security::Security_System.i
   subcomponents
     security_process : refined to process Security_Process_iPCA.i;
   
 end Security_System_iPCA.i;
 
 
process Security_Process_iPCA extends Security::Security_Process
  features
    crypto_control : refined to feature group iPCA_Feature_Groups::Crypto_Control_iPCA;
	properties
		Classifier_Substitution_Rule => Type_Extension;
end Security_Process_iPCA;

process implementation Security_Process_iPCA.i extends Security::Security_Process.i
	subcomponents
	  controller : refined to thread Security_Controller_iPCA.i;
end Security_Process_iPCA.i;

thread Security_Controller_iPCA extends Security::Security_Controller
	features
    crypto_control : refined to feature group iPCA_Feature_Groups::Crypto_Control_iPCA;
	properties
		Classifier_Substitution_Rule => Type_Extension;
end Security_Controller_iPCA;

--custom security controller here
thread implementation Security_Controller_iPCA.i extends Security::Security_Controller.i
end Security_Controller_iPCA.i;


--feature group tpm_signals 

--  features
--  --see Atmel AT97SC3204 table 1.1 for TPM signal definitions
--    lpc : in out event data port;  --33MHz Low Pin Count bus
--end tpm_signals; 
--
--system security
--  features
--    encrypt : in event data port text_key_pair;
--    decrypt: in event data port text_key_pair;
--    sign: in event data port text_key_pair;
--    verify : in event data port text_signature_key;
--    verified : out event port;
--    result :out event data port Base_Types::String;
--    security_fault: out event port;
--	--provisioning channel
--	Security_Provisioning : in event data port;  --type T.B.D.
--    --key management T.B.D.
--    Stand_Alone: in event port;
--end security;
--
--system implementation security.imp
--  subcomponents
--    tp: device tpm.imp;
--    cp: process crypto_process.imp;
--    pp: device personal_presence.imp; 
--  connections
--  --connection to TPM chip
--    tpmt: feature group cp.tpm_control_inv<->tp.tpm_control; 
--  --personal presence
--    ppb: port pp.present->tp.present;
--  --from operations
--    ens: port encrypt->cp.encrypt;
--    des: port decrypt->cp.decrypt;
--    sis: port sign->cp.sign;
--    ves: port verify->cp.verify;
--    ieds: port cp.verified->verified;
--    re: port cp.verified->verified; 
--  --fault
--    sf: port cp.security_fault->security_fault;   
--  --provisioning
--    pro: port Security_Provisioning->cp.Security_Provisioning;  
--  annex EMV2 
--  {**
--  use types ErrorLibrary, PCA_Error_Model;
--  use behavior PCA_Error_Model::CompositeFailStop; 	
--  error propagations
--    encrypt : in propagation {ItemOmission,ValueError}; 
--    decrypt: in propagation {ItemOmission,ValueError}; 
--    sign: in propagation {ItemOmission,ValueError}; 
--    verify : in propagation {ItemOmission,ValueError}; 
--    verified : out propagation {ItemOmission};
--    result : out propagation {ItemOmission,ValueError}; 
--    --feature groups send errors both ways
--    security_fault : out propagation {ItemOmission}; 
--    --security provisioning must not introduce errors, need confirmation process
--    Security_Provisioning : not in propagation {CommonErrors};    
--  end propagations;
--  composite error behavior
--    states 
--     [tp.failed or cp.failed]->failed;
--     [tp.working and cp.working]->working;
--  end composite;  	
--  **};  --end of EMV2
--end security.imp;
--
--device tpm
--  features
--    tpm_control: feature group tpm_signals;
--    present: in data port Base_Types::Boolean;
--end tpm;
--
--device implementation tpm.imp
--  annex EMV2 
--  {**
--  use types ErrorLibrary, PCA_Error_Model;
--  use behavior PCA_Error_Model::FailStop; 	
--  error propagations
--      --feature groups send errors both ways
--    tpm_control : out propagation {EarlyServiceTermination,ValueError}; 
--    tpm_control : in propagation {EarlyServiceTermination,ValueError}; 
--      --must never get false personal presence
--    present: not in propagation{ItemCommission};
--  end propagations;
-- 
--  properties
--    EMV2::OccurrenceDistribution => #iPCA_Properties::TPMFailureRate 
--      applies to fail;	
--  **};  --end of EMV2
--end tpm.imp;
--
--device personal_presence
--  features
--    present: out data port Base_Types::Boolean;
--end personal_presence;
--
--device implementation personal_presence.imp
--  annex EMV2 
--  {**
--  use types ErrorLibrary;
--  error propagations
--    --no false positives; never fails
--    present: not out propagation {ItemCommission};
--  end propagations;
--  **};  --end of EMV2
--end personal_presence.imp;
--
--data text_key_pair
--  properties
--    Data_Model::Data_Representation => struct;
--    Data_Model::Element_Names => ("text","key_index");
--    Data_Model::Base_Type => (classifier(Base_Types::String),classifier(Base_Types::Integer));
--end text_key_pair; 
--
--data text_signature_key
--  properties
--    Data_Model::Data_Representation => struct;
--    Data_Model::Element_Names => ("text","signature","key_index");
--    Data_Model::Base_Type => (classifier(Base_Types::String),classifier(Base_Types::String),classifier(Base_Types::Integer));
--end text_signature_key; 
--
--process crypto_process
--  features
--    encrypt : in event data port text_key_pair;
--    decrypt: in event data port text_key_pair;
--    sign: in event data port text_key_pair;
--    verify : in event data port text_signature_key;
--    verified : out event port;
--    result :out event data port Base_Types::String;
--    tpm_control_inv: feature group inverse of tpm_signals;
--    security_fault: out event port;
--	--provisioning channel
--	  Security_Provisioning : in event data port;  --type T.B.D.
--end crypto_process;
--
--process implementation crypto_process.imp
--  subcomponents
--    ct: thread crypto_thread.imp;
--  connections
--    en: port encrypt->ct.encrypt;
--    de: port decrypt->ct.decrypt;
--    si: port sign->ct.sign;
--    ve: port verify->ct.verify;
--    ied: port ct.verified->verified;
--    re: port ct.verified->verified;
--    tpmt: feature group tpm_control_inv<->ct.tpm_control_inv;
--  --fault
--    sf: port ct.security_fault->security_fault; 
--  --provisioning
--    pro: port Security_Provisioning->ct.Security_Provisioning;  
--  annex EMV2 
--  {**
--  use types ErrorLibrary, PCA_Error_Model;
--  use behavior PCA_Error_Model::CompositeFailStop; 	
--  error propagations
--    encrypt : in propagation {ItemOmission,ValueError}; 
--    decrypt: in propagation {ItemOmission,ValueError}; 
--    sign: in propagation {ItemOmission,ValueError}; 
--    verify : in propagation {ItemOmission,ValueError}; 
--    verified : out propagation {ItemOmission};
--    result : out propagation {ItemOmission,ValueError}; 
--    --feature groups send errors both ways
--    tpm_control_inv : out propagation {EarlyServiceTermination,ValueError}; 
--    tpm_control_inv : in propagation {EarlyServiceTermination,ValueError}; 
--    security_fault : out propagation {ItemOmission}; 
--    --security provisioning must not introduce errors, need confirmation process
--    Security_Provisioning : not in propagation {CommonErrors};
--  end propagations;
--  composite error behavior
--    states 
--     [ct.failed]->failed;
--     [ct.working]->working;
--  end composite;  	
--  **};  --end of EMV2
--end crypto_process.imp;
--
--
--thread crypto_thread
--  features
--    encrypt : in event data port text_key_pair;
--    decrypt: in event data port text_key_pair;
--    sign: in event data port text_key_pair;
--    verify : in event data port text_signature_key;
--    verified : out event port;
--    result :out event data port Base_Types::String;
--    tpm_control_inv: feature group inverse of tpm_signals;
--    security_fault: out event port;
--	--provisioning channel
--	Security_Provisioning : in event data port;  --type T.B.D.
--end crypto_thread;
--
--thread implementation crypto_thread.imp
--  annex EMV2 
--  {**
--  use types ErrorLibrary, PCA_Error_Model;
--  use behavior PCA_Error_Model::FailStop; 	
--  error propagations
--    encrypt : in propagation {ItemOmission,ValueError}; 
--    decrypt: in propagation {ItemOmission,ValueError}; 
--    sign: in propagation {ItemOmission,ValueError}; 
--    verify : in propagation {ItemOmission,ValueError}; 
--    verified : out propagation {EarlyServiceTermination};
--    result : out propagation {EarlyServiceTermination,ValueError}; 
--    --feature groups send errors both ways
--    tpm_control_inv : out propagation {EarlyServiceTermination,ValueError}; 
--    security_fault : out propagation {EarlyServiceTermination}; 
--    --security provisioning must not introduce errors, need confirmation process
--    Security_Provisioning : not in propagation {CommonErrors};
--  flows
--    dead1: error source verified{EarlyServiceTermination} when failed;
--    dead2: error source tpm_control_inv{EarlyServiceTermination} when failed;
--    dead3: error source security_fault{EarlyServiceTermination} when failed;
--    dead4: error source result{EarlyServiceTermination} when failed;
--  end propagations;
--  properties
--    EMV2::OccurrenceDistribution => #iPCA_Properties::ThreadFailureRate 
--      applies to fail;	
--  **};  --end of EMV2
--end crypto_thread.imp;
	
end iPCA_Security;