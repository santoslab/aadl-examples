--iPCA_Feature_Groups.aadl

--refinement of feature groups in FG for Platform PCA pump

package iPCA_Feature_Groups
public

with
  FG,   --generic feature groups
  iPCA_Types,   --types specific to PCA pump
  BLESS, BLESS_Types,
  Physical_Types,   --physical quantities
  Base_Types;   --AADL data model

flag renames data Base_Types::Boolean;

feature group Sensing_iPCA extends FG::Sensing
	features
		patient_button_press : in event port;  --patient presses button indicating desire for more painkiller
		barcode_signal : in data port;  --light from label(s) bar code (or QR or whatever)
end Sensing_iPCA;

feature group Actuation_iPCA extends FG::Actuation
	features
		drug_outlet : out data port Physical_Types::Fluid_Flow;  --drug infused into patient
		barcode_illumination : out data port;  --laser light on barcode
    fill_reservoir : in data port Physical_Types::Fluid_Volume;  --put drug in reservoir
end Actuation_iPCA;


feature group Alarm_iPCA extends FG::Alarm_Indication
  --alarm and warning signals from the safety subsystem that need to be communicated to the clinician
	features
    Alarm: refined to out event data port iPCA_Types::Alarm_Type  --alarm to control panel
      {BLESS::Assertion=>"<<:=ALARM_TYPE()>>";};  --reference Assertion enumeration
    Warning:  refined to  out event data port iPCA_Types::Warning_Type  --warning to control panel
      {BLESS::Assertion=>"<<:=WARNING_TYPE()>>";};  --reference Assertion enumeration
end Alarm_iPCA;
  
feature group Maintenance_iPCA extends FG::Maintenance
  --communicate with maintenance processor of non-functional information
  --like fault log, event log, drug library, security provisioning
	features
--		get_event_log : in event port;
		the_event_log : refined to in data port iPCA_Types::Event_Log;	
		load_drug_library : refined to out event data port iPCA_Types::Drug_Library;
end Maintenance_iPCA;

feature group User_Interface_iPCA extends FG::Operation_GUI
  --physical interface to the user/clinician; includes displays, buttons, speakers, etc.
	features
    system_status: out event data port iPCA_Types::Status_Type;
		hard_limit_violated: out event port;
		pause_infusion: in event port;
		resume_infusion: in event port;
  	clinician_request_bolus: in event port; --square bolus request from control panel
		clinician_bolus_duration: in event data port Physical_Types::Minute; --set square bolus time from control panel
		stop_button_pressed: in event port; --clinician pressed "stop" button
		start_button_pressed: in event port; --clinician pressed "start" button   
		confirm_soft_limit_exception: in event port; --clinician confirmed prescription
		reject_soft_limit_exception: in event port; --clinician rejected prescription
		soft_limit_warning: out event port; --prescription exceeds soft limit in drug library
		turn_off: in event port; --the "off" switch was pressed    
		display_message: out event data port iPCA_Types::Message; --message to be displayed on control panel 
		sound_type: out event data port iPCA_Types::Sound;
		patient_request_not_too_soon: out event port {BLESS::Assertion => "<<PATIENT_REQUEST_NOT_TOO_SOON(now)>>";};
		patient_request_too_soon: out event port {BLESS::Assertion => "<<PATIENT_REQUEST_TOO_SOON(now)>>";};
		over_max_drug_per_hour: out event port; --too much juice
		alarm_inactivation: in event data port iPCA_Types::Alarm_Signal; --"On","Alarm_Off","Alarm_Paused","Audio_Off","Audio_Paused"
end User_Interface_iPCA;

feature group Satety_GUI_iPCA extends FG::Safety_GUI
	features
    cp_reset_alarm: in event port;  --reset alarm(s)
		Alarm: out event data port iPCA_Types::Alarm_Type; --alarm indication
		Warning: out event data port iPCA_Types::Warning_Type; --warning indication
	
end Satety_GUI_iPCA;

feature group Network_iPCA extends FG::Operation_Comm
  --exchange information with network controller
  features
		alarm_inactivation: in event data port iPCA_Types::Alarm_Signal; --"On","Alarm_Off","Alarm_Paused","Audio_Off","Audio_Paused"
    pump_at_KVO_rate : in event port;
    halt : in event port;
end Network_iPCA;
	
feature group Safety_Peripherals_iPCA extends FG::Safety_Peripherals
	--information and control between the safety subsystem and the peripherals that perform medical function
	features
	  empty_reservoir : in event port;
	  low_reservoir : in event port;
	  bubble : in event port;
	  upstream_flow_rate : in data port iPCA_Types::Flow_Rate;
	  downstream_flow_rate : in data port iPCA_Types::Flow_Rate;
	  pump_too_hot : in event port;
	  downstream_occlusion : in event port;
	  upstream_occlusion : in event port;
	  halt : out event port; 
    door_open:  in data port flag --reservoir door is open
       {BLESS::Assertion=>"<<DOOR_OPEN>>";};     
end Safety_Peripherals_iPCA;

feature group Operation_Peripherals_iPCA extends FG::Operation_Peripherals
	--information and control between the operation subsystem and the peripherals that perform medical function
  features
    infusion_flow_rate : out data port  iPCA_Types::Flow_Rate;
    door_open : in data port flag;
    door_closed : in event port;
    request_bolus : in event port;  --patient wants more drug	
    do_scan : out event port;
    scan_done : in event port;
end Operation_Peripherals_iPCA;

feature group Operation_Safety_iPCA extends FG::Operation_Safety
  --signals between the operation and safety subsystems
  features
    Halt : in event port;
    pump_at_KVO_rate : in event port;
    infusion_flow_rate : out data port iPCA_Types::Flow_Rate;
    priming_failure : out event port;
    drug_not_in_library : out event port;
    hard_limit_violated : out event port;
    over_max_drug_per_hour : out event port;
    security_fault : out event port;
    cp_reset_alarm : out event port;
    post_fail : in event port;
    post_done : in event port;
    hw_detected_failure : in event port;
    Pumping_Mode : out data port iPCA_Types::Pumping_Mode;  --off,KVO,patient-bolus,priming,clinician-bolus   
end Operation_Safety_iPCA;

feature group Power_Safety_iPCA extends FG::Power_Safety
  --signals from the power subsystem to the safety subsystem; defective battery, voltage out of range, etc
  features
    low_battery_warning : out event port;
    voltage_oor : out event port;
    defective_btty : out event port;
end Power_Safety_iPCA;

feature group Power_Operation_iPCA extends FG::Power_Operation
  --signals from the power subsystem to the operation subsystem; using battery power, low battery warning, etc.
  features
    low_battery_warning : out event port;
    Using_Battery_Power : out data port flag;
    Remaining_Battery_Time : out data port BLESS_Types::Time;
end Power_Operation_iPCA;

feature group Crypto_Control_iPCA extends FG::Crypto_Control
	features
    authenticate_clinician: in event port;                --do clinician authentication
    clinician_name: out data port Base_Types::String;     --clinician name extracted from scan data
    authenticate_patient: in event port;                  --do patient authentication
    patient_name: out data port Base_Types::String;       --patient name extracted from scan data
    authenticate_prescription: in event port;             --do prescription authentication
    prescription: out data port iPCA_Types::Prescription;  --extracted prescription from scan data
    authentication_fail: out event port;                  --authentication failed
    authentication_pass: out event port;                  --authentication passed
    scan_data: in event data port iPCA_Types::Scan_Data_Type;    --data from scanner
    provisioning: feature group Provisioning_Signals;  --provisioning
 --   ICE_Security: feature group PCA_Pump::PCA_Security;   --security channel on ICE
    security_fault: out event port;                       --error during security operation 
end Crypto_Control_iPCA;

--security provisioning between security subsystem and maintanence processor
feature group Provisioning_Signals
end Provisioning_Signals;

--feature group Event_Log
--	features
--		get_event_log : in event port;
--		the_event_log : out event data port;	
--end Event_Log;

feature group Control_Panel_Interface extends FG::Control_Panel_Interface
end Control_Panel_Interface;

end iPCA_Feature_Groups;