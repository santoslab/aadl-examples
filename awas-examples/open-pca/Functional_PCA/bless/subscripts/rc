# iPCA_Operation_Threads::Rate_Controller.i
push
sort-by-component[iPCA_Operation_Threads::Rate_Controller.i]
#iPCA_Operation_Threads::Rate_Controller.i
#[serial 1051] <<M(WaitForStart)>> -> <<I>> from invariant I when complete state WaitForStart has Assertion <<M(WaitForStart)>> in its definition
make-an
axioms
#[serial 1052] <<M(PumpBasalRate)>> -> <<I>> from invariant I when complete state PumpBasalRate has Assertion <<M(PumpBasalRate)>> in its definition.
axioms
#[serial 1053] <<M(PumpCCBRate)>> -> <<I>> from invariant I when complete state PumpCCBRate has Assertion <<M(PumpCCBRate)>> in its definition.
axioms
#[serial 1054] <<M(PumpingSuspended)>> -> <<I>> from invariant I when complete state PumpingSuspended has Assertion <<M(PumpingSuspended)>> in its definition.
axioms
#[serial 1055] <<M(RxApproved)>> -> <<I>> from invariant I when complete state RxApproved has Assertion <<M(RxApproved)>> in its definition.
axioms
#[serial 1056] <<M(WaitForRx)>> -> <<I>> from invariant I when complete state WaitForRx has Assertion <<M(WaitForRx)>> in its definition.
axioms
#[serial 1057] <<M(Priming)>> -> <<I>> from invariant I when complete state Priming has Assertion <<M(Priming)>> in its definition.
axioms
#[serial 1058] <<M(ButtonDuringSquare)>> -> <<I>> from invariant I when complete state ButtonDuringSquare has Assertion <<M(ButtonDuringSquare)>> in its definition.
axioms
#[serial 1059] <<M(PumpPatientButtonVTBI)>> -> <<I>> from invariant I when complete state PumpPatientButtonVTBI has Assertion <<M(PumpPatientButtonVTBI)>> in its definition.
axioms
#[serial 1060] <<M(PumpKVORate)>> -> <<I>> from invariant I when complete state PumpKVORate has Assertion <<M(PumpKVORate)>> in its definition.
axioms
#[serial 1061] Serban's Theorem:  disjunction of execute conditions leaving execution state PowerOn, <<M(PowerOn)>> -> <<e1 or e2 or . . . en>>
axioms
#[serial 1062] Serban's Theorem:  disjunction of execute conditions leaving execution state CheckPBR, <<M(CheckPBR)>> -> <<e1 or e2 or . . . en>>
normalize
replace<=
normalize
laws
cnf
laws
normalize
axioms
#[serial 1063]  <<M(PowerOn) and x>> -> <<M(WaitForRx)>> for go:PowerOn-[x]->WaitForRx{};
axioms
#[serial 1064]  <<M(WaitForRx) and x>> -> <<M(CheckPBR)>> for rxo:WaitForRx-[x]->CheckPBR{};
now
axioms
#[serial 1065]  <<M(CheckPBR) and x>> -> <<M(Crash)>> for pbr0:CheckPBR-[x]->Crash{};
axioms
#[serial 1066]  <<M(CheckPBR) and x>> A <<M(RxApproved)>> for pbrok:CheckPBR-[x]->RxApproved{A};
reduce
normalize
substitute-both
atomic
normalize
laws
replaceNEwithLTorGT
normalize
axioms
split-post
normalize
axioms
substitute-post
normalize
axioms
#[serial 1067]  <<M(RxApproved) and x>> A <<M(Priming)>> for rxpri:RxApproved-[x]->Priming{A};
reduce
substitute-both
normalize
laws
atomic
axioms
laws
normalize
axioms
substitute-both
normalize
axioms
dist^
normalize
axioms
#[serial 1068]  <<M(Priming) and x>> A <<M(WaitForStart)>> for prd:Priming-[x]->WaitForStart{A};
reduce
substitute-both
normalize
atomic
substitute-both
normalize
axioms
dist^
normalize
laws
normalize
laws
now
axioms
#[serial 1069]  <<M(WaitForStart) and x>> A <<M(Priming)>> for pri:WaitForStart-[x]->Priming{A};
reduce
substitute-post
normalize
laws
atomic
normalize
laws
normalize
axioms
substitute-both
substitute-both
normalize
dist^
normalize
laws
normalize
axioms
#[serial 1070]  <<M(WaitForStart) and x>> A <<M(PumpBasalRate)>> for sap:WaitForStart-[x]->PumpBasalRate{A};
normalize
laws
split-post
normalize
reduce
atomic
substitute-both
substitute-both
normalize
laws
normalize
axioms
now
laws
axioms
#[serial 1071]  <<M(PumpBasalRate) and x>> A <<M(PumpPatientButtonVTBI)>> for patient_button:PumpBasalRate-[x]->PumpPatientButtonVTBI{A};
reduce
substitute-both
substitute-both
normalize
laws
now
atomic
laws
normalize
axioms
substitute-post
now
normalize
axioms
#[serial 1072]  <<M(PumpPatientButtonVTBI) and x>> A <<M(PumpBasalRate)>> for vtbi_delivered:PumpPatientButtonVTBI-[x]->PumpBasalRate{A};
reduce
atomic
normalize
now
laws
normalize
axioms
split-post
normalize
axioms
substitute-post
normalize
axioms
#[serial 1073]  <<M(PumpBasalRate) and x>> A <<M(PumpCCBRate)>> for square_bolus:PumpBasalRate-[x]->PumpCCBRate{A};
reduce
atomic
normalize
laws
normalize
now
axioms
split-post
normalize
axioms
substitute-post
normalize
axioms
#[serial 1074]  <<M(PumpCCBRate) and x>> A <<M(PumpBasalRate)>> for square_delivered:PumpCCBRate-[x]->PumpBasalRate{A};
reduce
atomic
normalize
laws
normalize
axioms
now
axioms
split-post
normalize
axioms
substitute-post
normalize
axioms
#[serial 1075]  <<M(PumpCCBRate) and x>> A <<M(ButtonDuringSquare)>> for pb_square:PumpCCBRate-[x]->ButtonDuringSquare{A};
reduce
atomic
normalize
laws
normalize
axioms
now
axioms
substitute-post
normalize
axioms
#[serial 1076]  <<M(ButtonDuringSquare) and x>> A <<M(PumpCCBRate)>> for pb_square_delivered:ButtonDuringSquare-[x]->PumpCCBRate{A};
reduce
atomic
normalize
laws
normalize
axioms
dist^
normalize
axioms
split-post
normalize
axioms
substitute-post
normalize
axioms
#[serial 1077]  <<M(ButtonDuringSquare) and x>> A <<M(PumpingSuspended)>> for alarm_halt:ButtonDuringSquare-[x]->PumpingSuspended{A};
reduce
atomic
normalize
laws
normalize
now
axioms
split-post
normalize
axioms
substitute-post
normalize
axioms
#[serial 1078]  <<M(PumpCCBRate) and x>> A <<M(PumpingSuspended)>> for alarm_halt:PumpCCBRate-[x]->PumpingSuspended{A};
reduce
atomic
normalize
laws
normalize
axioms
now
axioms
split-post
normalize
axioms
substitute-post
normalize
axioms
#[serial 1079]  <<M(PumpBasalRate) and x>> A <<M(PumpingSuspended)>> for alarm_halt:PumpBasalRate-[x]->PumpingSuspended{A};
reduce
atomic
normalize
laws
normalize
axioms
now
axioms
split-post
normalize
axioms
substitute-post
normalize
axioms
#[serial 1080]  <<M(PumpPatientButtonVTBI) and x>> A <<M(PumpingSuspended)>> for alarm_halt:PumpPatientButtonVTBI-[x]->PumpingSuspended{A};
reduce
atomic
normalize
laws
normalize
axioms
now
axioms
split-post
normalize
axioms
substitute-post
normalize
axioms
#[serial 1081]  <<M(ButtonDuringSquare) and x>> A <<M(PumpKVORate)>> for alarm_kvo:ButtonDuringSquare-[x]->PumpKVORate{A};
reduce
atomic
normalize
laws
normalize
axioms
now
axioms
split-post
normalize
axioms
substitute-post
normalize
axioms
#[serial 1082]  <<M(PumpCCBRate) and x>> A <<M(PumpKVORate)>> for alarm_kvo:PumpCCBRate-[x]->PumpKVORate{A};
reduce
atomic
normalize
laws
normalize
axioms
now
axioms
split-post
normalize
axioms
substitute-post
normalize
axioms
#[serial 1083]  <<M(PumpBasalRate) and x>> A <<M(PumpKVORate)>> for alarm_kvo:PumpBasalRate-[x]->PumpKVORate{A};
reduce
atomic
normalize
laws
normalize
axioms
now
axioms
split-post
normalize
axioms
substitute-post
normalize
axioms
#[serial 1084]  <<M(PumpPatientButtonVTBI) and x>> A <<M(PumpKVORate)>> for alarm_kvo:PumpPatientButtonVTBI-[x]->PumpKVORate{A};
reduce
atomic
normalize
laws
normalize
axioms
now
axioms
split-post
normalize
axioms
substitute-post
normalize
axioms