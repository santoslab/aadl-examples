--Abstract_Devices.aadl

-- devices show up in both the physical architecture, and the functional architecture
-- to make them both refer to the same thing, platform devices are defined as 'abstract' and then
-- refined into 'device' or 'thread' for each architecture with eventually the threads bound to the devices

-- this requires setting Actual_Function_Binding of the thread to the physical device


package Abstract_Devices
public
  with
    Buses,
    FG,
    Physical_Types
    ;
    
--maintenance access 
abstract Abstract_Maintenance_Processor
	features
    maintenance_bus : requires bus access Buses::Maintenance_Bus;	  
    provision_bus : requires bus access Buses::Provisioning_Bus;	  
	  system_bus : requires bus access Buses::System_Bus;
		power_supply : requires bus access Buses::Power_Supply;
		mp_clock : requires bus access Buses::Clock;
		mtm_bus : requires bus access Buses::MTM_Bus;
end Abstract_Maintenance_Processor;

--security processor
abstract Abstract_Crypto_Processor
	features
		cc : feature group FG::Crypto_Control;  --connection to cryptoprocessor
	  system_bus : requires bus access Buses::System_Bus;
	  --dedicated physical connection for trustworthy provisioning
    provision_bus : requires bus access Buses::Provisioning_Bus;
		power_supply : requires bus access Buses::Power_Supply;
		mtm_bus : requires bus access Buses::MTM_Bus;
end Abstract_Crypto_Processor;

--Network Interface Chip; Ethernet chip (set)
abstract Abstract_NIC
	features
	  system_bus : requires bus access Buses::System_Bus;
	  --external connection to Ethernet, WiFi, etc.
    ethernet : requires bus access Buses::CAT5;
		power_supply : requires bus access Buses::Power_Supply;
		nic_clock : requires bus access Buses::Clock;
		mtm_bus : requires bus access Buses::MTM_Bus;
end Abstract_NIC;

--USB, serial, lvds
abstract Abstract_External_Bus_Controller
	features
	  system_bus : requires bus access Buses::System_Bus;
		serial_bus : provides bus access Buses::Serial_Bus;  --1553 serial bus to text terminal through UART
		usb_bus : provides bus access Buses::USB;  --to USB connector
		lvds_bus : provides bus access Buses::LVDS;  --Low Voltage Differential Signaling (LVDS)
		power_supply : requires bus access Buses::Power_Supply;
end Abstract_External_Bus_Controller;

--touch screen display
	abstract Abstract_Touch_Screen
		features
----EXTERNAL EFFECT
			ui_image: out data port Physical_Types::Image; --image seen by clinician
----CONTROLLED VARIABLE
			image: in data port; --image type from controller
----EXTERNAL PHENOMENON    
			ui_touch: in data port Physical_Types::Touch; --finger(s) on screen
----MOITORED VARIABLE
			finger_location: out event data port;
	end Abstract_Touch_Screen;

--controller for display
abstract Abstract_Display_Controller
	features
	  system_bus : requires bus access Buses::System_Bus;
    video_bus : requires bus access Buses::Video_Bus;
	  dc_clock : requires bus access Buses::Clock;
		power_supply : requires bus access Buses::Power_Supply;	  	
		mtm_bus : requires bus access Buses::MTM_Bus;
	  hdmi_bus  : requires bus access Buses::HDMI;  --external monitor
		vga_bus : requires bus access Buses::VGA;  --classic monitor interface 
end Abstract_Display_Controller;

--sound maker
abstract Abstract_Speaker
	features
	  	audio_bus : requires bus access Buses::Audio_Bus;
	  	sound : out data port Physical_Types::Sound;
end Abstract_Speaker;

--sound controller
abstract Abstract_Sound_Controller
	features
	  system_bus : requires bus access Buses::System_Bus;
	  	audio_bus : requires bus access Buses::Audio_Bus;
		power_supply : requires bus access Buses::Power_Supply;
		sc_clock : requires bus access Buses::Clock;
		mtm_bus : requires bus access Buses::MTM_Bus;
end Abstract_Sound_Controller;

--power subsystem
	abstract Abstract_Power
		features
			power_supply: requires bus access Buses::Power_Supply;
			system_bus: requires bus access Buses::System_Bus;
			peripheral_power: requires bus access Buses::Power_Supply;
			mtm_bus: requires bus access Buses::MTM_Bus;
	end Abstract_Power;

--custom timers
	abstract Abstract_Timers
		features
			system_bus: requires bus access Buses::System_Bus;
			peripheral_power: requires bus access Buses::Power_Supply;
	end Abstract_Timers;

--this represents an optical or RFID scanner to read
--drug labels, patient wristbands, and clinician badges
abstract Abstract_Scanner
  features
		barcode_signal : in data port;  --light from label(s) bar code (or QR or whatever)
		barcode_illumination : out data port;  --laser light on barcode
    do_scan: in event port;                    --tell scanner to scan
    scan_done: out event port;                   --scan completed
    scan_data: out event data port;  --data from scanner
end Abstract_Scanner;

	
end Abstract_Devices;