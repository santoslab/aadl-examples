--Services.aadl
--platform services
package Services
public
	with Security, --security software
--	  Hardware,
		Base_Types, Comm, --communication subsystem
		FG, --feature groups 
		CPAL,  --cyber-physical access layer
		Buses,
		Physical_Types;
		
flag renames data Base_Types::Boolean;

system Platform_Services
  features
		alarm : feature group inverse of FG::Alarm_Indication;	 --alarm to announce 
		alarm_inactivation : out data port flag;  --user suspends alarms
  	to_user : feature group inverse of FG::Operation_GUI;  --user interface
  	to_comm : feature group inverse of FG::Operation_Comm;  --communicate with communications subsystem
  	from_maintenance: feature group FG::Maintenance;    --only uses a subset of maintenance signals
  	crypto_control : feature group FG::Crypto_Control; 	
	--EXTERNAL EFFECT
		ui_image: out data port Physical_Types::Image;
		ui_sound: out data port Physical_Types::Sound;
	--EXTERNAL PHENOMENON    
		ui_touch: in data port Physical_Types::Touch;
		to_network: requires bus access Buses::CAT5;
		jack: requires bus access Buses::Maintenance_Bus; --physical jack to connect to maintenance controller
end Platform_Services;

system implementation Platform_Services.i
	subcomponents
		security: system Security::Security_System.i;
		communication_subsystem: system Comm::Communications.i;
		gui: system User_Interface.i;
  	cpal : process CPAL::CPAL_Server_Process.i;
	connections
	--user interface connections
		tu : feature group to_user <-> gui.to_user;
		al : feature group alarm <-> gui.alarm;
		ai : port gui.alarm_inactivation -> alarm_inactivation;
		im : port gui.ui_image -> ui_image;
		so : port gui.ui_sound -> ui_sound;
		ut : port ui_touch -> gui.ui_touch;
	--communications connections
	  toc : feature group to_comm <-> communication_subsystem.to_comm; 
		alc : feature group alarm <-> communication_subsystem.alarm;
		mc : feature group from_maintenance <-> communication_subsystem.maintenance;
		tn : bus access communication_subsystem.to_network -> to_network;
		j : bus access communication_subsystem.jack -> jack;
	--security connection
	  cc : feature group crypto_control <-> security.crypto_control;
	--cpal conections
--	  h : port halt -> cpal.halt;
--	  m : port cpal.malfunction -> malfunction;
--	  fs : feature group from_safety <-> cpal.from_safety;
--	  fo : feature group from_operation <-> cpal.from_operation;
--	--security connections
--    s : feature group si <-> sec.si;
	end Platform_Services.i;

--uses hardware in Human_Machine_Interface to implement GUI
	system User_Interface
		features
			to_user: feature group inverse of FG::Operation_GUI;
			alarm: feature group inverse of FG::Alarm_Indication;
			alarm_inactivation: out data port flag; --user suspends alarms
--EXTERNAL EFFECT
			ui_image: out data port Physical_Types::Image;
			ui_sound: out data port Physical_Types::Sound;
--EXTERNAL PHENOMENON    
			ui_touch: in data port Physical_Types::Touch;
	end User_Interface;

	system implementation User_Interface.i
		subcomponents
			gui: process GUI_process.i;
			control_panel: device Control_Panel;
		connections
			op: feature group to_user <-> gui.from_operation;
			al: feature group alarm <-> gui.alarm;
			inac: port gui.alarm_inactivation -> alarm_inactivation;
			cpi: feature group gui.cp_int <-> control_panel.cp_int;
			ui_i: feature control_panel.ui_image -> ui_image;
			ui_s: feature control_panel.ui_sound -> ui_sound;
			ui_t: feature ui_touch -> control_panel.ui_touch;
	end User_Interface.i;

--there will be lots of graphics libraries and software in here
	process GUI_process
		features
			from_operation: feature group inverse of FG::Operation_GUI;
			alarm: feature group inverse of FG::Alarm_Indication;
			alarm_inactivation: out data port flag; --user suspends alarms
			cp_int: feature group inverse of FG::Control_Panel_Interface;
	end GUI_process;

	process implementation GUI_process.i
	end GUI_process.i;

	device Control_Panel
		features
			ui_image: out data port Physical_Types::Image;
			ui_sound: out data port Physical_Types::Sound;
			ui_touch: in data port Physical_Types::Touch;
			cp_int: feature group FG::Control_Panel_Interface;
	end Control_Panel;
end Services;